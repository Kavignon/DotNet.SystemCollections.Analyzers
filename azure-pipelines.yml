trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildNumber: 0.0.0-$(Date:yyyyMMdd)$(Rev:.r)
  buildConfiguration: 'Release'

steps:

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "buildConfiguration...................... $(buildConfiguration)"
      Write-Host "buildNumber............................. $buildNumber"
      Write-Host "Build repository local path............. $(Build.Repository.LocalPath)"
      Write-Host "Build artifact staging directory........ $(build.artifactstagingdirectory)"
    failOnStderr: true
    pwsh: true

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: 'restore'
    projects: '$(Build.Repository.LocalPath)/**/*.csproj'
    feedsToUse: 'config'
    nugetConfigPath: 'nuget.config'
- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: 'test'
    projects: '$(Build.Repository.LocalPath)/**/DotNet.SystemCollections.Analyzers.Test.csproj'
    testRunTitle: 'Evaluating .NET analyzers functionality'

- task: DotNetCoreCLI@2
  displayName: Pack
  inputs:
    command: 'pack'
    packagesToPack: '$(Build.Repository.LocalPath)/**/DotNet.SystemCollections.Analyzers.nuspec'
    packDirectory: '$(build.artifactstagingdirectory)'
    nobuild: true
    versioningScheme: 'byPrereleaseNumber'
    majorVersion: '1'
    minorVersion: '0'
    patchVersion: '0'

- task: DotNetCoreCLI@2
  displayName: Push
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '52aea7be-35e6-45f8-9736-5e7007cb8ab9/38f18ef3-8233-4a17-a440-e7560da3d3e1'

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(Build.Repository.LocalPath)'
    TargetFolder: '$(build.artifactstagingdirectory)/s'
    CleanTargetFolder: true
    OverWrite: true
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()